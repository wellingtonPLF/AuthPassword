// use std::path::Path;
// use tauri::utils::config::parse;

// let _ = create_directory("encrypt_data");
// let _ = create_directory("encrypt_data/gmail");
// let _ = save_file("gmail", "domain", "123456789");

// match get_auth("gmail", "domain") {
//     Ok(contents) => println!("{}", contents),
//     Err(e) => eprintln!("Failed to get auth: {}", e),
// }

// let _ = hash_auth();

// let valor = get_auth("gmail", "domain");
// println!("{}", valor.unwrap());

// match verify_auth(password, parsed_hash) {
//     Ok(valid) => {
//         if valid {
//             println!("Password is valid.");
//         } else {
//             println!("Invalid password.");
//         }
//     }
//     Err(e) => eprintln!("Error verifying password: {}", e),
// }

// ***********************************************************************************

// let plaintext = "backendengineer.io".to_string();

// let key_str = "thiskeystrmustbe32charlongtowork".to_string();

// let encrypted_data = encrypt(key_str, plaintext);

// let _ = save_file("gmail", "vish", "hello");
// let _ = save_to_file("gmail", "encrypted_data.bin", &encrypted_data);

// let valor = get_encryption("gmail", "encrypted_data.bin");
// let decrypted_data = decrypt(key_str, valor?);
// println!("{}", decrypted_data);